openapi: 3.0.3
info:
  title: Catflix Gateway Service
  description: Microservice d'interface pour le projet Catflix. Permet de connecter les utilisateurs, et de gérer les utilisateurs, les vidéos et les reviews.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Development server
paths:

  /auth:
    post:
      summary: Connecter l'utilisateur
      requestBody:
        description: Identifiants de l'utilisateur
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/credentials'
      responses:
        400:
          description: Les identifiants ne correspondent pas à ce qui est attendu
        401:
          description: Les identifiants sont incorrects
        200:
          description: Retourne un token d'authentification prouvant l'identité de l'utilisateur
          content:
            'application/json':
              schema:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhdXRoMCIsInBzZXVkbyI6IkNhdDRMaWZlIn0.LqfooEI-I9VTBo-isjm812ttnIPagMCwdhRkW5ngn0_tlLX86LRoxahgskmgIeWDbm4Mu3y3D8Qbhq_71hNQTA

  /users/{pseudo}:
    parameters:
      - name: pseudo
        in: path
        description: Pseudo de l'utilisateur
        schema:
          type: string
        example: PetWard
    post:
      summary: Créer un utilisateur et ses identifiants
      requestBody:
        description: Données de l'utilisateur avec ses identifiants
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/userWithCredentials'
      responses:
        400:
          description: Les données de l'utilisateur ne correspondent pas à ce qui est attendu
        409:
          description: Un utilisateur existe déjà avec ce pseudo
        201:
          description: L'utilisateur a été créé
    get:
      summary: Lire un utilisateur
      responses:
        404:
          description: L'utilisateur n'a pas été trouvé
        200:
          description: Retourne les données de l'utilisateur
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/user'
    put:
      summary: Modifier un utilisateur et ses identifiants
      security:
        - jwt:
            - Connecté en tant que l'utilisateur voulant modifier ses données
      requestBody:
        description: Données de l'utilisateur avec ses identifiants
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/userWithCredentials'
      responses:
        400:
          description: Les données de l'utilisateur ne correspondent pas à ce qui est attendu
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à modifier ces données
        404:
          description: L'utilisateur n'a pas été trouvé
        200:
          description: L'utilisateur a été modifié
    delete:
      summary: Supprimer un utilisateur
      security:
        - jwt:
            - Connecté en tant que l'utilisateur voulant supprimer son compte
      responses:
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à supprimer ce compte
        404:
          description: L'utilisateur n'a pas été trouvé
        200:
          description: L'utilisateur a été supprimé

  /users/{pseudo}/videos:
    get:
      summary: Lire les vidéos de l'utilisateur
      parameters:
        - name: pseudo
          in: path
          description: Pseudo de l'utilisateur
          schema:
            type: string
          example: PetWard
      responses:
        200:
          description: Retourne les vidéos de l'utilisateur
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/video'

  /users/{pseudo}/reviews:
    get:
      summary: Lire les reviews de l'utilisateur
      parameters:
        - name: pseudo
          in: path
          description: Pseudo de l'utilisateur
          schema:
            type: string
          example: PetWard
      responses:
        200:
          description: Retourne les reviews de l'utilisateur
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review'

  /videos:
    get:
      summary: Lire toutes les vidéos
      responses:
        200:
          description: Retourne toutes les vidéos
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/video'

  /videos/best:
    get:
      summary: Lire les 3 vidéos les mieux notées
      responses:
        200:
          description: Retourne les 3 vidéos les mieux notées
          content:
            'application/json':
              schema:
                type: array
                maxItems: 3
                items:
                  $ref: '#/components/schemas/video'

  /videos/{hash}:
    parameters:
      - name: hash
        in: path
        description: Hash de la vidéo
        schema:
          type: string
        example: dQw4w9WgXcQ
    post:
      summary: Crée une vidéo
      security:
        - jwt:
            - Connecté en tant que l'auteur de la vidéo
      requestBody:
        description: Données de la vidéo
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/video'
      responses:
        400:
          description: Les données de la vidéo ne correspondent pas à ce qui est attendu
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à créer cette vidéo
        409:
          description: Une vidéo existe déjà avec ce hash
        201:
          description: La vidéo a été créée
    get:
      summary: Lire une vidéo
      responses:
        404:
          description: La vidéo n'a pas été trouvée
        200:
          description: Retourne les données de la vidéo
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/video'
    put:
      summary: Modifier une vidéo
      security:
        - jwt:
            - Connecté en tant que l'auteur de la vidéo
      requestBody:
        description: Données de la vidéo
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/video'
      responses:
        400:
          description: Les données de la vidéo ne correspondent pas à ce qui est attendu
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à modifier cette vidéo
        404:
          description: La vidéo n'a pas été trouvée
        200:
          description: La vidéo a été modifiée
    delete:
      summary: Supprimer une vidéo
      security:
        - jwt:
            - Connecté en tant que l'auteur de la vidéo
      responses:
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à supprimer cette vidéo
        404:
          description: La vidéo n'a pas été trouvée
        200:
          description: La vidéo a été supprimée

  /videos/{hash}/reviews:
    get:
      summary: Lire les reviews de la vidéo
      parameters:
        - name: hash
          in: path
          description: Hash de la video
          schema:
            type: string
          example: dQw4w9WgXcQ
      responses:
        200:
          description: Retourne les reviews de la vidéo
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review'

  /reviews/{pseudo}/{hash}:
    parameters:
      - name: pseudo
        in: path
        description: Pseudo de l'utilisateur
        schema:
          type: string
        example: PetWard
      - name: hash
        in: path
        description: Hash de la video
        schema:
          type: string
        example: dQw4w9WgXcQ
    post:
      summary: Créer une review
      security:
        - jwt:
            - Connecté en tant que l'utilisateur voulant créer une review
      requestBody:
        description: Données de la review
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/review'
      responses:
        400:
          description: Les données de la review ne correspondent pas à ce qui est attendu
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à créer cette review
        409:
          description: Une review existe déjà pour cette vidéo et cet utilisateur
        201:
          description: La review a été créée
    get:
      summary: Lire une review
      responses:
        404:
          description: La review n'a pas été trouvée
        200:
          description: Retourne les données de la review
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/review'
    put:
      summary: Mettre à jour une review
      security:
          - jwt:
              - Connecté en tant que l'utilisateur voulant modifier une review
      requestBody:
        description: Données de la review
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/review'
      responses:
        400:
          description: Les données de la review ne correspondent pas à ce qui est attendu
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à modifier cette review
        404:
          description: La review n'a pas été trouvée
        200:
          description: La review a été modifiée
    delete:
      summary: Supprimer une review
      security:
          - jwt:
              - Connecté en tant que l'utilisateur voulant supprimer une review
      responses:
        401:
          description: Le token d'authentification n'a pas pu être vérifié
        403:
          description: L'utilisateur n'est pas autorisé à supprimer cette review
        404:
          description: La review n'a pas été trouvée
        200:
          description: La review a été supprimée

components:
  schemas:
    user:
      type: object
      properties:
        pseudo:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      example:
        pseudo: PetWard
        firstname: Marine
        lastname: Pelland
    video:
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        author:
          type: string
        creationYear:
          type: integer
        duration:
          type: integer
          description: in seconds
        url:
          type: string
      example:
        hash: dQw4w9WgXcQ
        name: Cutest kitty ever
        author: PetWard
        creationYear: 2009
        duration: 212
        url: https://www.youtube.com/watch?v=dQw4w9WgXcQ
    review:
      type: object
      properties:
        pseudo:
          type: string
        hash:
          type: string
        rating:
          type: number
        comment:
          type: string
      example:
        pseudo: PetWard
        hash: dQw4w9WgXcQ
        rating: 10
        comment: Best video!
    credentials:
      type: object
      properties:
        pseudo:
          type: string
        password:
          type: string
      example:
        pseudo: PetWard
        password: password123
    userWithCredentials:
      type: object
      properties:
        pseudo:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        password:
          type: string
      example:
        pseudo: PetWard
        firstname: Marine
        lastname: Pelland
        password: password123
  
